/*! blocss-buttons v1.0.0 | MIT License | github.com/Blocss */

/*----------------------------------------------------------------------------*\
    $BUTTONS
    Basic button structural styling. Extend in your theme stylesheet.
\*----------------------------------------------------------------------------*/

/*  Variables
\*----------------------------------------------------------------------------*/

// Module can be disabled by switching `$use-buttons` to `false`
$use-buttons:                       true                            !default;

$button-padding:                       $space/2                        !default;
$button-padding--small:                $button-padding/2                  !default;
$button-padding--large:                $button-padding*2                  !default;
$button-background:                    #4a8ec2                         !default;
$button-color:                         #fff                            !default;
$button-border-width:                  1px                             !default;
$button-border-style:                  solid                           !default;
$button-border-color:                  $button-background                 !default;



/*  Core button component
\*----------------------------------------------------------------------------*/

@if $use-buttons == true {

/**
 * The button classes are best applied to links, buttons, and submit inputs.
 * These components can be used in forms, as calls to action, or as part of
 * the general UI of the site/app.
 *
 * Recommended use:
 *
<a class="button  [button--modifier]" role="button" href="[url]">button text</a>
<button class="button  [button--modifier]" type="submit">button text</button>
<input class="button  [button--modifier]" type="submit" value="button text">
 */

/**
 * Button template
 *
 * Build on this component using rulesets in your application-level CSS.
 */
.button {
    display: inline-block;
    vertical-align: middle;
    @include rem(padding, ($button-padding - $button-border-width)  ($button-padding*2 - $button-border-width));
    margin:  0;
    border: none;
    overflow: visible;
    font: inherit;
    text-align: center;
    cursor: pointer;
    background-color: $button-background;

    @if($button-border-width != 0) {
        border: $button-border-width $button-border-style $button-border-color;
    }

    &,
    &:hover,
    &:active,
    &:focus,
    &:visited {
        text-decoration: none;
        color: $button-color;
    }

    &:hover,
    &:active,
    &:focus {
        background-color: darken($button-background, 15%);
        border-color:     darken($button-background, 15%);
    }


    /**
     * Remove excess padding and border in Firefox 4+
     */
    &::-moz-focus-inner {
        border: 0;
        padding: 0;
    }
}



/*  Sizes
\*----------------------------------------------------------------------------*/

/**
 * Button size modifiers
 */
.button--small {
    @include rem(padding, ($button-padding--small - $button-border-width) (($button-padding--small*2) - $button-border-width));
}
.button--large {
    @include rem(padding, ($button-padding--large - $button-border-width) (($button-padding--large*2) - $button-border-width));
}


/**
 * full-width modifier
 */
.button--full {
    display: block;
    width: 100%;
}



/* Font sizes
\*----------------------------------------------------------------------------*/

/**
 * Button font-size modifiers
 */
.button--alpha {
    @include font-size($alpha);
}
.button--beta {
    @include font-size($beta);
}
.button--gamma {
    @include font-size($gamma);
}
.button--delta {
    @include font-size($delta);
}
.button--epsilon {
    @include font-size($epsilon);
}
.button--zeta {
    @include font-size($zeta);
}
.button--milli {
    @include font-size($milli);
}
.button--micro {
    @include font-size($micro);
}


/**
 * Make the button inherit sizing from its parent.
 */
.button--normalis {
    vertical-align: baseline;
    font-size: inherit;
    line-height: inherit;
    padding-right: 0.5em;
    padding-left: 0.5em;
}
}